// import type { Metadata } from "next";
// import { Inter } from "next/font/google";
// import "./globals.css";

// const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body className={inter.className}>{children}</body>
//     </html>
//   );
// }

import { AntdRegistry } from "@ant-design/nextjs-registry";
import "antd/dist/reset.css";
import { ReduxProvider } from "../redux/provider";
import { Suranna, Jost, Inter } from "next/font/google";
import localFont from "@next/font/local";
import NextTopLoader from "nextjs-toploader";
import { getServerSession } from "next-auth/next";
import { authOptions } from "@/app/auth";
import MainLayout from "@/components/common/Mainlayout";
import Script from "next/script";
import { ConfigProvider } from "antd";
// import MainLayout from "@/components/MainLayout";
import "@/app/globals.css";
import { AuthOptions } from "next-auth";

const suranna = Suranna({
  subsets: [],
  weight: ["400"], // You can also use other available weights
  variable: "--font-suranna",
});

const inter = Inter({
  subsets: [],
  weight: ["400", "500", "600", "700"], // You can also use other available weights
  variable: "--font-inter",
});

const jost = Jost({
  subsets: [],
  weight: ["400", "500", "600", "700"], // You can also use other available weights
  variable: "--font-jost",
});

const suse = localFont({
  src: "../../public/font/SUSE/SUSE-VariableFont_wght.ttf",
  //  weight: ["400", "500", "600", "700"] ,
  variable: "--font-suse",
});

const qasira = localFont({
  src: "../../public/font/Qasira.otf",
  //  weight: ["400", "500", "600", "700"] ,
  variable: "--font-Qasira",
});

const bentonsans_comp_medium = localFont({
  src: "../../public/font/bentonsans-comp-medium.otf",
  //  weight: ["400", "500", "600", "700"] ,
  variable: "--font-bentonsans_comp_medium",
});

const bentonSans_bold = localFont({
  src: "../../public/font/BentonSans-Bold.otf",
  //  weight: ["400", "500", "600", "700"] ,
  variable: "--font-bentonSans_bold",
});

// export const metadata = {
//   title: "Diyamrut Naturals",
//   icons: {
//     icon: "/favicon.ico",
//   },
// };

interface RootLayoutProps {
  children: React.ReactNode;
}

export default async function RootLayout({ children }: RootLayoutProps) {
  const session = await getServerSession(authOptions as AuthOptions);
  return (
    <html lang="en" style={{ overflow: "hidden" }}>
      <body
        style={{ overflowX: "hidden" }}
        className={`${inter.variable} ${jost.variable} ${suranna.variable} `}
        // className={`${poppins.variable}`}
      >
        <NextTopLoader />
        <ReduxProvider>
          <AntdRegistry>
            <MainLayout session={session}>{children}</MainLayout>
          </AntdRegistry>
        </ReduxProvider>
      </body>
    </html>
  );
}
